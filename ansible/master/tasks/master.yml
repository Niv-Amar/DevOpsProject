---
# tasks file for k8s_master
- name: installing docker
  package:
    name:
    - docker
    state: present

- name: Add YUM repository for Kubernetes
  ansible.builtin.copy:
    src: /home/admin/project/ansible/dynamic_inventory/k8s.repo
    dest: /etc/yum.repos.d/kubernetes.repo

- name: install k8s
  shell: |
          sudo yum update -y
          sudo yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes

- name: disable swap
  shell: |
          sudo swapoff -a
          sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

- name: Restart kubelet
  service:
    name: kubelet
    daemon_reload: yes
    state: restarted


- name: installing iproute-tc
  package:
    name:
    - iproute-tc
    state: present

- name: enabling docker and kubelet service
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  loop:
    - kubelet
    - docker

#- name: pulling all images
#  shell: kubeadm config images pull

- name: copying content of the daemon.json file
  become: yes
  copy:
    dest: /etc/docker/daemon.json
    src:  daemon.json

- name: restarting docker services
  service:
    name: docker
    state: restarted

- name: copying k8s conf fil
  copy:
    dest: /etc/sysctl.d/k8s.conf
    src: k8s.conf

- name: refreshing sysctl
  shell: "sysctl --system"

- name: initializing  kubeadm service
  shell: "kubeadm init --pod-network-cidr=10.244.0.0/16  --ignore-preflight-errors=NumCPU --ignore-preflight-errors=Mem"
  ignore_errors: yes

- name: create .kube directory
  become: yes
  become_user: admin
  file:
    path: $HOME/.kube
    state: directory
    mode: 0755

- name: copies admin.conf to user's kube config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/admin/.kube/config
    remote_src: yes
    owner: admin

- name: premission
  become_user: admin
  shell: |
          sudo chown $(id -u):$(id -g) $HOME/.kube/config
          export KUBECONFIG=$HOME/.kube/config
          sudo chown $(id -u):$(id -g) /var/run/docker.sock 

- name: Installing flannel
  become: yes
  become_user: admin
  shell: |
          kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

- name: Get the token for joining the worker nodes
  become: yes
  become_user: admin
  shell: |
          kubeadm token create  --print-join-command
  register: kubernetes_join_command

- debug:
    msg: "{{ kubernetes_join_command.stdout }}"

- name: Copy join command to local file.
  become: yes
  local_action: copy content="{{ kubernetes_join_command.stdout_lines[0]}} --ignore-preflight-errors=all" dest="/tmp/kubernetes_join_command" mode=0777

